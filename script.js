// D·ªØ li·ªáu s·∫£n ph·∫©m m·∫´u
const products = [
  {id: 1, name: "N∆∞·ªõc su·ªëi Lavie 500ml", category: "ƒë·ªì u·ªëng", price: 5000, image:"images/nuoc-mam-nam-ngu.png"},
  {id: 2, name: "N∆∞·ªõc tƒÉng l·ª±c redbul", category: "ƒë·ªì u·ªëng", price: 12000, image:"images/nuoc-mam-nam-ngu.png"},
  {id: 3, name: "M√¨ t√¥m H·∫£o H·∫£o", category: "ƒë·ªì kh√¥", price: 5000, image:"images/nuoc-mam-nam-ngu.png"},
  {id: 4, name: "K·∫πo d·∫ªo Haribo", category: "b√°nh k·∫πo", price: 30000, image:"images/nuoc-mam-nam-ngu.png"},
  {id: 5, name: "Bia H√† N·ªôi", category: "r∆∞·ª£u bia", price: 15000, image:"images/nuoc-mam-nam-ngu.png"},
  {id: 6, name: "Thu·ªëc l√° 555", category: "thu·ªëc l√°", price: 120000, image:"images/nuoc-mam-nam-ngu.png"},
  {id: 7, name: "D·∫ßu g·ªôi Clear", category: "g·ªôi r·ª≠a", price: 70000, image:"images/nuoc-mam-nam-ngu.png"},
  {id: 8, name: "B√≥ng ƒë√®n Philips", category: "ƒë·ªì ƒëi·ªán", price: 40000, image:"images/nuoc-mam-nam-ngu.png"},
  {id: 9, name: "N·ªìi inox", category: "ƒë·ªì b·∫øp", price: 300000, image:"images/nuoc-mam-nam-ngu.png"},
  {id: 10, name: "Qu·∫°t ƒëi·ªán Asia", category: "gia d·ª•ng", price: 600000, image:"images/nuoc-mam-nam-ngu.png"},
];

// Format gi√° ti·ªÅn
function formatPrice(price) {
  if (typeof price !== 'number' || isNaN(price)) {
    console.error('Gi√° tr·ªã s·∫£n ph·∫©m kh√¥ng h·ª£p l·ªá:', price);
    return 'Gi√° kh√¥ng h·ª£p l·ªá'; // Tr·∫£ v·ªÅ chu·ªói th√¥ng b√°o n·∫øu gi√° kh√¥ng h·ª£p l·ªá
  }
  return price.toLocaleString('vi-VN') + ' VND';
}

// Hi·ªÉn th·ªã s·∫£n ph·∫©m theo danh m·ª•c
function renderProducts(category = 'all') {
  const productsEl = document.getElementById('products');
  if (!productsEl) return; // ch·ªâ ch·∫°y tr√™n trang index

  productsEl.innerHTML = '';

  let filtered = category === 'all' ? products : products.filter(p => p.category === category);

  // Thay ƒë·ªïi s·ªë c·ªôt theo danh m·ª•c
  if(category === 'all') {
    productsEl.classList.remove('category');
    productsEl.classList.add('home');
  } else {
    productsEl.classList.remove('home');
    productsEl.classList.add('category');
  }

  if(filtered.length === 0) {
    productsEl.innerHTML = '<p>Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o trong m·ª•c n√†y.</p>';
    return;
  }

  filtered.forEach(product => {
  if (!product || typeof product.price !== 'number' || isNaN(product.price)) {
    console.error(`S·∫£n ph·∫©m ${product ? product.name : 'undefined'} kh√¥ng h·ª£p l·ªá`);
    return; // N·∫øu s·∫£n ph·∫©m kh√¥ng h·ª£p l·ªá, kh√¥ng hi·ªÉn th·ªã
  }

  const div = document.createElement('div');
  div.className = 'product-card';

  div.innerHTML = `
    <img src="${product.image}" alt="${product.name}" />
    <div class="product-name">${product.name}</div>
    <div class="product-price">${formatPrice(product.price)}</div>
    <button class="btn-add" data-id="${product.id}">Th√™m v√†o gi·ªè</button>
  `;

  productsEl.appendChild(div);
});

  // G√°n s·ª± ki·ªán n√∫t th√™m v√†o gi·ªè
  document.querySelectorAll('.btn-add').forEach(button => {
    button.addEventListener('click', () => {
      const id = Number(button.getAttribute('data-id'));
      const product = products.find(p => p.id === id);
      if(product) addToCart(product);
    });
  });

  // G√°n s·ª± ki·ªán cho n√∫t danh m·ª•c
  const navButtons = document.querySelectorAll('.nav-btn');
  navButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      navButtons.forEach(b => b.classList.remove('active'));
      btn.classList.add('active');
      renderProducts(btn.getAttribute('data-category'));
    });
  });
}

// Th√™m s·∫£n ph·∫©m v√†o gi·ªè, l∆∞u localStorage
function addToCart(product) {
  // Ki·ªÉm tra lo·∫°i id c·ªßa s·∫£n ph·∫©m, n·∫øu l√† ki·ªÉu chu·ªói, chuy·ªÉn sang ki·ªÉu s·ªë
  const validId = Number(product.id);
  
  // Ki·ªÉm tra n·∫øu id l√† s·ªë h·ª£p l·ªá
  if (isNaN(validId)) {
    console.error(`S·∫£n ph·∫©m c√≥ id kh√¥ng h·ª£p l·ªá: ${product.id}`);
    return;
  }

  let cart = JSON.parse(localStorage.getItem('cart')) || [];
  
  // T·∫°o ƒë·ªëi t∆∞·ª£ng gi·ªè h√†ng m·ªõi cho s·∫£n ph·∫©m
  const cartItem = {
    id: validId,
    quantity: 1 // C·∫ßn t·∫°o thu·ªôc t√≠nh quantity ƒë·ªÉ l∆∞u s·ªë l∆∞·ª£ng
  };

  // Ki·ªÉm tra n·∫øu s·∫£n ph·∫©m ƒë√£ c√≥ trong gi·ªè h√†ng, th√¨ ch·ªâ tƒÉng s·ªë l∆∞·ª£ng
  const existingProductIndex = cart.findIndex(item => item.id === validId);
  if (existingProductIndex > -1) {
    cart[existingProductIndex].quantity += 1;
  } else {
    cart.push(cartItem);
  }
  
  localStorage.setItem('cart', JSON.stringify(cart));

  // Hi·ªÉn th·ªã th√¥ng b√°o
  const msg = document.getElementById('add-to-cart-message');
  if (msg) {
    msg.style.display = 'block';
    msg.style.opacity = '1';

    // ·∫®n sau 1 gi√¢y
    setTimeout(() => {
      msg.style.display = 'none';
    }, 1000);
  }
}

// Hi·ªÉn th·ªã gi·ªè h√†ng tr√™n trang cart.html
function renderCart() {
  const cartList = document.getElementById('cart-list');
  const totalPriceEl = document.getElementById('total-price');
  if (!cartList || !totalPriceEl) return; // ch·ªâ ch·∫°y tr√™n cart.html

  let cart = JSON.parse(localStorage.getItem('cart')) || [];

  cartList.innerHTML = '';

  if(cart.length === 0) {
    cartList.innerHTML = '<li>Gi·ªè h√†ng tr·ªëng.</li>';
    totalPriceEl.textContent = 'T·ªïng ti·ªÅn: 0 VND';
    return;
  }

  let total = 0;

  // Duy·ªát qua t·ª´ng s·∫£n ph·∫©m trong gi·ªè h√†ng
  cart.forEach((item, index) => {
    // T√¨m s·∫£n ph·∫©m trong m·∫£ng products
    const product = products.find(p => p.id === item.id);

    // Ki·ªÉm tra n·∫øu kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m h·ª£p l·ªá
    if (!product) {
      console.error(`Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m v·ªõi id ${item.id}`);
      return;
    }

    total += product.price * item.quantity;

    const li = document.createElement('li');
    li.innerHTML = `
      ${product.name} - ${formatPrice(product.price)} x ${item.quantity}
      <button data-index="${index}">X√≥a</button>
    `;
    cartList.appendChild(li);
  });

  totalPriceEl.textContent = 'T·ªïng ti·ªÅn: ' + formatPrice(total);

  // X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
  cartList.querySelectorAll('button').forEach(btn => {
    btn.addEventListener('click', () => {
      const idx = Number(btn.getAttribute('data-index'));
      cart.splice(idx, 1);
      localStorage.setItem('cart', JSON.stringify(cart));
      renderCart();
    });
  });
}

// X·ª≠ l√Ω ƒë·∫∑t h√†ng (g·ª≠i Telegram API)
function handleOrder() {
  const orderForm = document.getElementById('order-form');
  const orderMessage = document.getElementById('order-message');
  const orderSummary = document.getElementById('order-summary');

  if (!orderForm) return; // ch·ªâ ch·∫°y tr√™n cart.html

  orderForm.addEventListener('submit', async (e) => {
    e.preventDefault();

    // Ki·ªÉm tra gi·ªè h√†ng kh√¥ng r·ªóng
    let cart = JSON.parse(localStorage.getItem('cart')) || [];
    if(cart.length === 0) {
      orderMessage.style.color = 'red';
      orderMessage.textContent = 'Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng, vui l√≤ng th√™m s·∫£n ph·∫©m.';
      return;
    }

    // L·∫•y th√¥ng tin form
    const fullname = orderForm.fullname.value.trim();
    const address = orderForm.address.value.trim();
    const phone = orderForm.phone.value.trim();

    if(!fullname || !address || !phone) {
      orderMessage.style.color = 'red';
      orderMessage.textContent = 'Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin ƒë·∫∑t h√†ng.';
      return;
    }

    // T√≠nh t·ªïng gi√°
    let total = cart.reduce((sum, item) => sum + item.price, 0);

    // Chu·∫©n b·ªã tin nh·∫Øn g·ª≠i Telegram
    const BOT_TOKEN = '7986532916:AAGPbxtqJHILVuHBYb0fwsKU62a4jEJ8Jp8';
    const CHAT_ID = '7774024453';

    let message = `üõíƒê∆°n h√†ng m·ªõi t·ª´ c·ª≠a h√†ng L·ªòC HO√ÄI\n\n`;
    message += `Kh√°ch h√†ng:\nH·ªç t√™n: ${fullname}\nƒê·ªãa ch·ªâ: ${address}\nSƒêT: ${phone}\n\n`;
    message += `S·∫£n ph·∫©m:\n`;
    cart.forEach((item, i) => {
      message += `${i+1}. ${item.name} - ${formatPrice(item.price)}\n`;
    });
    message += `\nT·ªïng ti·ªÅn: ${formatPrice(total)}`;

    // G·ª≠i request ƒë·∫øn Telegram API
    try {
      const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;
      const params = {
        chat_id: CHAT_ID,
        text: message
      };

      const res = await fetch(url, {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify(params)
      });

      const data = await res.json();
      if(data.ok) {
        orderMessage.style.color = 'green';
        orderMessage.textContent = 'ƒê·∫∑t h√†ng th√†nh c√¥ng! C·∫£m ∆°n b·∫°n.';
        orderForm.reset();
        localStorage.removeItem('cart');
        renderCart();

        // Hi·ªÉn th·ªã t√≥m t·∫Øt ƒë∆°n h√†ng
        orderSummary.style.display = 'block';
        orderSummary.innerHTML = `<h3>Th√¥ng tin ƒë∆°n h√†ng c·ªßa b·∫°n:</h3>
          <p><strong>H·ªç t√™n:</strong> ${fullname}</p>
          <p><strong>ƒê·ªãa ch·ªâ:</strong> ${address}</p>
          <p><strong>S·ªë ƒëi·ªán tho·∫°i:</strong> ${phone}</p>
          <p><strong>T·ªïng ti·ªÅn:</strong> ${formatPrice(total)}</p>
          <p><strong>S·∫£n ph·∫©m:</strong></p>
          <ul>${cart.map(item => `<li>${item.name} - ${formatPrice(item.price)}</li>`).join('')}</ul>
        `;
      } else {
        orderMessage.style.color = 'red';
        orderMessage.textContent = 'C√≥ l·ªói khi g·ª≠i ƒë∆°n h√†ng, vui l√≤ng th·ª≠ l·∫°i.';
      }
    } catch (err) {
      orderMessage.style.color = 'red';
      orderMessage.textContent = 'C√≥ l·ªói khi g·ª≠i ƒë∆°n h√†ng, vui l√≤ng th·ª≠ l·∫°i.';
      console.error(err);
    }
  });
}

// Kh·ªüi t·∫°o trang cart v√† order
document.addEventListener('DOMContentLoaded', () => {
  renderCart();
  handleOrder();
});
document.addEventListener('DOMContentLoaded', () => {
  // N·∫øu l√† trang index.html
  if (document.getElementById('products')) {
    renderProducts('all');
  }

  // N·∫øu l√† trang cart.html
  if (document.getElementById('cart-list')) {
    renderCart();
    handleOrder();
  }
});
